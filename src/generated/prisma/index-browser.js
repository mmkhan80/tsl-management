
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  studentId: 'studentId',
  classSectionId: 'classSectionId',
  adate: 'adate',
  status: 'status',
  updatedBy: 'updatedBy',
  updatedDate: 'updatedDate'
};

exports.Prisma.RenamedclassScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt'
};

exports.Prisma.ClasssectionScalarFieldEnum = {
  id: 'id',
  classId: 'classId',
  sectionId: 'sectionId',
  teacherId: 'teacherId',
  subjectHeadId: 'subjectHeadId'
};

exports.Prisma.SectionScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.StudentScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  gender: 'gender',
  dateOfBirth: 'dateOfBirth',
  rollNumber: 'rollNumber',
  classSectionId: 'classSectionId',
  admissionDate: 'admissionDate',
  previousSchool: 'previousSchool',
  fatherNic: 'fatherNic',
  email: 'email',
  phone: 'phone',
  address: 'address',
  religion: 'religion',
  guardianName: 'guardianName',
  guardianContact: 'guardianContact',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeacherScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  nic: 'nic',
  subjectSpecialty: 'subjectSpecialty',
  hireDate: 'hireDate'
};

exports.Prisma.MetricgroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  updatedBy: 'updatedBy',
  updatedDate: 'updatedDate'
};

exports.Prisma.MetricScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  groupId: 'groupId',
  updatedBy: 'updatedBy',
  updatedDate: 'updatedDate'
};

exports.Prisma.MetricscorecardScalarFieldEnum = {
  id: 'id',
  studentId: 'studentId',
  classSectionId: 'classSectionId',
  adate: 'adate',
  metricId: 'metricId',
  score: 'score',
  updatedBy: 'updatedBy',
  updatedDate: 'updatedDate'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  rights: 'rights',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.attendanceOrderByRelevanceFieldEnum = {
  updatedBy: 'updatedBy'
};

exports.Prisma.RenamedclassOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.sectionOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.studentOrderByRelevanceFieldEnum = {
  firstName: 'firstName',
  lastName: 'lastName',
  gender: 'gender',
  rollNumber: 'rollNumber',
  previousSchool: 'previousSchool',
  fatherNic: 'fatherNic',
  email: 'email',
  phone: 'phone',
  address: 'address',
  religion: 'religion',
  guardianName: 'guardianName',
  guardianContact: 'guardianContact'
};

exports.Prisma.teacherOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  nic: 'nic',
  subjectSpecialty: 'subjectSpecialty'
};

exports.Prisma.metricgroupOrderByRelevanceFieldEnum = {
  name: 'name',
  updatedBy: 'updatedBy'
};

exports.Prisma.metricOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  updatedBy: 'updatedBy'
};

exports.Prisma.metricscorecardOrderByRelevanceFieldEnum = {
  updatedBy: 'updatedBy'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  password: 'password'
};
exports.attendance_status = exports.$Enums.attendance_status = {
  P: 'P',
  A: 'A',
  L: 'L',
  V: 'V'
};

exports.Prisma.ModelName = {
  attendance: 'attendance',
  Renamedclass: 'Renamedclass',
  classsection: 'classsection',
  section: 'section',
  student: 'student',
  teacher: 'teacher',
  metricgroup: 'metricgroup',
  metric: 'metric',
  metricscorecard: 'metricscorecard',
  user: 'user'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
